package com.bootcamp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.bootcamp.Books;
import com.bootcamp.BooksRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/book") // This means URL's start with /book (after Application path)
public class BooksController {
	
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private BooksRepository bookRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewBook (@RequestParam String title
			, @RequestParam String isbn, @RequestParam String author,
			@RequestParam String condition, @RequestParam int year, @RequestParam int count, @RequestParam double rating) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Books book = new Books();
		book.setTitle(title);
		book.setIsbn(isbn);
		book.setAuthor(author);
		book.setCondition(condition);
		book.setCount(count);
		book.setYear(year);
		book.setRating(rating);
		
		bookRepository.save(book);

		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Books> getAllUsers() {
		// This returns a JSON or XML with the users
		return bookRepository.findAll();
	}

}
